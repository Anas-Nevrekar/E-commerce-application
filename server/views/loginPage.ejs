<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Authentication Portal</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
            position: relative;
            overflow-x: hidden;
        }

        /* Animated background elements */
        body::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><circle cx="20" cy="20" r="2" fill="rgba(255,255,255,0.1)"/><circle cx="80" cy="80" r="2" fill="rgba(255,255,255,0.1)"/><circle cx="40" cy="60" r="1" fill="rgba(255,255,255,0.08)"/><circle cx="70" cy="30" r="1.5" fill="rgba(255,255,255,0.06)"/></svg>') repeat;
            animation: float 20s ease-in-out infinite;
            pointer-events: none;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0px) rotate(0deg); }
            50% { transform: translateY(-20px) rotate(5deg); }
        }

        .auth-container {
            display: flex;
            gap: 32px;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            padding: 48px;
            border-radius: 24px;
            box-shadow: 
                0 25px 50px rgba(0, 0, 0, 0.15),
                0 0 0 1px rgba(255, 255, 255, 0.2);
            max-width: 1000px;
            width: 100%;
            position: relative;
            animation: slideUp 0.8s ease-out;
        }

        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .auth-box {
            flex: 1;
            background: linear-gradient(145deg, #ffffff, #f8fafc);
            padding: 32px;
            border-radius: 16px;
            box-shadow: 
                0 8px 32px rgba(0, 0, 0, 0.06),
                inset 0 1px 0 rgba(255, 255, 255, 0.7);
            border: 1px solid rgba(255, 255, 255, 0.2);
            position: relative;
            transition: all 0.3s ease;
        }

        .auth-box:hover {
            transform: translateY(-2px);
            box-shadow: 
                0 12px 40px rgba(0, 0, 0, 0.1),
                inset 0 1px 0 rgba(255, 255, 255, 0.7);
        }

        .auth-box::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #667eea, #764ba2);
            border-radius: 16px 16px 0 0;
        }

        h1 {
            text-align: center;
            margin-bottom: 32px;
            color: #1a202c;
            font-size: 1.875rem;
            font-weight: 700;
            letter-spacing: -0.025em;
            position: relative;
        }

        h1::after {
            content: '';
            display: block;
            width: 60px;
            height: 3px;
            background: linear-gradient(90deg, #667eea, #764ba2);
            margin: 12px auto 0;
            border-radius: 2px;
        }

        .form-group {
            margin-bottom: 24px;
            position: relative;
        }

        label {
            font-weight: 600;
            display: block;
            margin-bottom: 8px;
            color: #374151;
            font-size: 0.875rem;
            text-transform: uppercase;
            letter-spacing: 0.05em;
        }

        input {
            width: 100%;
            padding: 16px 20px;
            border-radius: 12px;
            border: 2px solid #e5e7eb;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: #ffffff;
            color: #1f2937;
            position: relative;
        }

        input:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 
                0 0 0 4px rgba(102, 126, 234, 0.1),
                0 4px 12px rgba(102, 126, 234, 0.15);
            transform: translateY(-1px);
        }

        input::placeholder {
            color: #9ca3af;
            transition: opacity 0.3s ease;
        }

        input:focus::placeholder {
            opacity: 0.7;
        }

        button {
            width: 100%;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 16px 24px;
            border-radius: 12px;
            cursor: pointer;
            font-weight: 600;
            font-size: 1rem;
            text-transform: uppercase;
            letter-spacing: 0.05em;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            margin-top: 8px;
        }

        button::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: left 0.5s ease;
        }

        button:hover {
            transform: translateY(-2px);
            box-shadow: 
                0 8px 25px rgba(102, 126, 234, 0.3),
                0 4px 12px rgba(0, 0, 0, 0.1);
        }

        button:hover::before {
            left: 100%;
        }

        button:active {
            transform: translateY(0);
        }

        .divider {
            display: flex;
            align-items: center;
            margin: 32px 0;
            position: relative;
        }

        .divider::before {
            content: '';
            flex: 1;
            height: 1px;
            background: linear-gradient(90deg, transparent, #e5e7eb, transparent);
        }

        .divider span {
            padding: 0 20px;
            color: #6b7280;
            font-size: 0.875rem;
            font-weight: 500;
            background: linear-gradient(145deg, #ffffff, #f8fafc);
        }

        /* Responsive design */
        @media (max-width: 768px) {
            .auth-container {
                flex-direction: column;
                gap: 24px;
                padding: 32px 24px;
                margin: 20px;
            }

            .auth-box {
                padding: 24px;
            }

            h1 {
                font-size: 1.5rem;
                margin-bottom: 24px;
            }
        }

        /* Success states and micro-interactions */
        .form-group.success input {
            border-color: #10b981;
            background: #f0fdf4;
        }

        .form-group.error input {
            border-color: #ef4444;
            background: #fef2f2;
        }

        /* Loading state for buttons */
        button.loading {
            pointer-events: none;
            opacity: 0.8;
        }

        button.loading::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 20px;
            height: 20px;
            margin: -10px 0 0 -10px;
            border: 2px solid transparent;
            border-top: 2px solid #ffffff;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Additional visual enhancements */
        .auth-box .icon {
            width: 24px;
            height: 24px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            border-radius: 50%;
            margin: 0 auto 16px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
        }

        .login-box .icon::before {
            content: 'ðŸ‘¤';
        }

        .signup-box .icon::before {
            content: 'âœ¨';
        }
    </style>
</head>
<body>
    <div class="auth-container">
        <div class="auth-box login-box">
            <div class="icon"></div>
            <h1>Welcome Back</h1>
            <form action="/login" method="POST">
                <div class="form-group">
                    <label for="login-username">Username</label>
                    <input type="text" name="username" id="login-username" placeholder="Enter your username" required>
                </div>

                <div class="form-group">
                    <label for="login-password">Password</label>
                    <input type="password" name="password" id="login-password" placeholder="Enter your password" required>
                </div>

                <button type="submit">Sign In</button>
            </form>
            
            <div class="divider">
                <span>Secure Login</span>
            </div>
        </div>

        <div class="auth-box signup-box">
            <div class="icon"></div>
            <h1>Join Us Today</h1>
            <form action="/handleSignin" method="POST">
                <div class="form-group">
                    <label for="signup-username">Username</label>
                    <input type="text" name="username" id="signup-username" placeholder="Choose a username" required>
                </div>

                <div class="form-group">
                    <label for="signup-email">Email Address</label>
                    <input type="email" name="email" id="signup-email" placeholder="Enter your email" required>
                </div>

                <div class="form-group">
                    <label for="signup-password">Password</label>
                    <input type="password" name="password" id="signup-password" placeholder="Create a strong password" required>
                </div>

                <button type="submit">Create Account</button>
            </form>
            
            <div class="divider">
                <span>Get Started</span>
            </div>
        </div>
    </div>

    <script>
        // Add some interactive functionality
        document.addEventListener('DOMContentLoaded', function() {
            const inputs = document.querySelectorAll('input');
            const buttons = document.querySelectorAll('button');

            // Add focus animations
            inputs.forEach(input => {
                input.addEventListener('focus', function() {
                    this.parentElement.classList.add('focused');
                });

                input.addEventListener('blur', function() {
                    this.parentElement.classList.remove('focused');
                    if (this.value) {
                        this.parentElement.classList.add('has-value');
                    } else {
                        this.parentElement.classList.remove('has-value');
                    }
                });
            });

            // Add button click effects
            buttons.forEach(button => {
                button.addEventListener('click', function(e) {
                    // Create ripple effect
                    const ripple = document.createElement('span');
                    const rect = this.getBoundingClientRect();
                    const size = Math.max(rect.width, rect.height);
                    const x = e.clientX - rect.left - size / 2;
                    const y = e.clientY - rect.top - size / 2;
                    
                    ripple.style.cssText = `
                        position: absolute;
                        width: ${size}px;
                        height: ${size}px;
                        left: ${x}px;
                        top: ${y}px;
                        background: rgba(255,255,255,0.3);
                        border-radius: 50%;
                        transform: scale(0);
                        animation: ripple 0.6s ease-out;
                        pointer-events: none;
                    `;
                    
                    this.appendChild(ripple);
                    
                    setTimeout(() => {
                        ripple.remove();
                    }, 600);
                });
            });
        });

        // Add CSS for ripple animation
        const style = document.createElement('style');
        style.textContent = `
            @keyframes ripple {
                to {
                    transform: scale(2);
                    opacity: 0;
                }
            }
            
            .form-group.focused input {
                transform: translateY(-1px);
            }
            
            .form-group.has-value label {
                color: #667eea;
            }
        `;
        document.head.appendChild(style);
    </script>
</body>
</html>